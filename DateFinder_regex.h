#ifndef DATEFORMATTER_H
#define DATEFORMATTER_H

#include <iostream>
#include <regex>
#include <fstream>
#include <string>

// Масив із назвами місяців англійською
extern std::string months[];

// Оголошення функцій

std::string month_to_name(const std::string& month);
/**
 * @brief Перетворює номер місяця на назву місяця англійською мовою.
 *
 * Використовує масив `months`, що містить назви місяців англійською, для перетворення числового значення
 * місяця в текстову назву. Перевіряє, чи число місяця знаходиться в діапазоні від 1 до 12, і повертає
 * назву відповідного місяця, якщо число правильне. Інакше повертає порожній рядок.
 *
 * @param month Рядок, що містить числове значення місяця.
 * @return Назва місяця англійською або порожній рядок, якщо значення неправильне.
 */

std::string format_date(const std::string& part1, const std::string& part2, const std::string& part3, bool year_first);
/**
 * @brief Форматує дату у вигляді "DD Month YYYY".
 *
 * Приймає три частини дати: рік, місяць і день, а також прапорець `year_first`, що вказує,
 * чи рік розташований на першому місці у форматі дати. Якщо рік записано двозначним числом,
 * додає "20" на початку для його перетворення в повний формат. Збирає й повертає дату у вигляді
 * "DD Month YYYY".
 *
 * @param part1 Перша частина дати, яка може бути роком або днем.
 * @param part2 Друга частина дати, що представляє місяць.
 * @param part3 Третя частина дати, яка може бути роком або днем.
 * @param year_first Булевий прапорець, що вказує, чи рік йде першим у форматі дати.
 * @return Відформатована дата у вигляді "DD Month YYYY".
 */

std::string date_finder(const std::string& line);
/**
 * @brief Шукає дати в рядку та перетворює їх у формат "DD Month YYYY".
 *
 * Використовує регулярний вираз для пошуку дат у форматах "DD.MM.YYYY", "YYYY.MM.DD", "DD/MM/YYYY" та ін.
 * Функція обробляє рядки з датами, розділеними крапкою або слешем, і визначає правильний формат на основі довжини
 * і значення першої частини. Потім використовує `format_date` для перетворення дати та замінює
 * вихідний формат на відформатовану версію у вихідному рядку.
 *
 * @param line Рядок для обробки.
 * @return Рядок з відформатованими датами.
 */

void printer(std::ifstream& inputFile);
/**
 * @brief Зчитує рядки з файлу та викликає `date_finder` для обробки дат у кожному рядку.
 *
 * Читає файл пострічково, передає кожен рядок у `date_finder`, яка знаходить і замінює дати
 * у формат "DD Month YYYY". Виводить результат обробки на екран.
 *
 * @param inputFile Вхідний файл для обробки.
 */

void file_opener(const std::string& textfile);
/**
 * @brief Відкриває текстовий файл і викликає `printer` для обробки його вмісту.
 *
 * Відкриває файл, передає його функції `printer` для обробки. Якщо файл не відкривається,
 * виводить повідомлення про помилку.
 *
 * @param textfile Назва або шлях до файлу для обробки.
 */

#endif // DATEFORMATTER_H
