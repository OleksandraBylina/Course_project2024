#ifndef HYPERLINKFINDER_H
#define HYPERLINKFINDER_H

#include <iostream>
#include <fstream>
#include <string>
#include <cctype>

// Оголошення функцій

int* hyperlink_beginning_finder(const std::string& line, int& count);
/**
 * @brief Знаходить початки гіперпосилань у рядку.
 *
 * Створює масив на купі (`massive_of_beginnings`) максимального можливого розміру для збереження позицій.
 * Використовує std::string::find для пошуку початкових позицій гіперпосилань
 * у циклі за їхніми ключовими частинами: "https://", "http://", "www.", "ftp://".
 * Якщо посилання знайдено, додає позицію в масив, який повертає функція.
 *
 * @param line Рядок, у якому виконується пошук.
 * @param count Посилання на змінну, в яку буде записано кількість знайдених початкових позицій.
 * @return Вказівник на масив цілих чисел, що містить позиції початку гіперпосилань.
 */


int* hyperlink_ending_finder(const std::string& line, int* massive_of_beginnings, int count);
/**
 * @brief Знаходить кінцеві позиції гіперпосилань у рядку.
 *
 * Створює динамічний масив на купі (`massive_of_endings`) для збереження позицій
 * Позиція кінця вираховується для кожного знайденого початку гіперпосилання
 * у циклі.
 * Використовує `std::string::find` для пошуку першого пробілу після початкової позиції гіперпосилання
 * з масиву (`massive_of_beginnings`).
 * Перевіряє, чи кінцева позиція має символи пунктуації (`,`, `;`, `:`, `.`) і зменшує `pos`, щоб виключити їх.
 * Зберігає скориговану кінцеву позицію для кожного гіперпосилання в масиві `massive_of_endings`.
 *
 * @param line Рядок, у якому виконується пошук.
 * @param massive_of_beginnings Вказівник на масив початкових позицій гіперпосилань.
 * @param count Кількість початкових позицій гіперпосилань.
 * @return Вказівник на масив цілих чисел, що містить кінцеві позиції кожного гіперпосилання.
 */
int* end_of_word_finder(const std::string& line, int& count);
/**
 * @brief Знаходить кінцеві позиції слів перед кожним гіперпосиланням у рядку.
 *
 * Функція викликає `hyperlink_beginning_finder`, щоб отримати початкові позиції гіперпосилань.
 *
 * Створює динамічний масив `massive_of_word_endings` для збереження кінцевих позицій слів,
 * що передують гіперпосиланням.
 *
 * Ініціалізує змінну-лічильник `e`, яка починає з позиції перед кожним гіперпосиланням (`beginnings[i] - 1`).
 *
 * Використовує вбудовану функцію `std::isspace` для перевірки на пропуски та порівнює із знаками пунктуації (`,`, `;`, `:`, `.`).
 * Коли знаходить кінець слова, записує позицію у масив.
 *
 * @param line Рядок, у якому виконується пошук.
 * @param count Ссылка на змінну, в яку записується кількість знайдених кінців слів.
 * @return Вказівник на масив цілих чисел, що містить кінцеві позиції слів перед кожним гіперпосиланням.
 */
int* begin_of_word_finder(const std::string& line, int& count);
/**
 * @brief Знаходить початкові позиції слів, які містять гіперпосилання в рядку.
 *
 * Функція викликає `end_of_word_finder`, щоб отримати кінцеві позиції слів перед кожним гіперпосиланням.
 *
 * Створює динамічний масив `massive_of_word_beginnings` для збереження початкових позицій слів,
 * що містять гіперпосилання.
 *
 * Ініціалізує змінну-лічильник `e`, яка починає з кінця слова перед гіперпосиланням (`endings[i]`).
 *
 * Використовує вбудовану функцію `std::isspace` та символи пунктуації, щоб визначити початкову позицію слова
 * за допомогою циклу, що йде в сторону початку рядка.
 * Коли знаходить початок слова (символ після пропуску або пунктуації), записує позицію у масив.
 *
 * @param line Рядок, у якому виконується пошук.
 * @param count Ссылка на змінну, що містить кількість слів для обробки.
 * @return Вказівник на масив цілих чисел, що містить початкові позиції слів з гіперпосиланнями.
 */
void printer(std::ifstream& inputFile);
/**
 * @brief Виводить знайдені гіперпосилання з файлу.
 *
 * Ініціалізує змінну 'line' для запису зчитаного рядка.
 *
 *
 * Ініціалізує змінну-лічильник `beginning_count`
 *
 * Викликає `begin_of_word_finder`, `hyperlink_beginning_finder` та `hyperlink_ending_finder` для визначення початкових
 * і кінцевих позицій слів, що містять гіперпосилання, та самих гіперпосилань у рядку. Далі функція виконує цикл
 * для кожного гіперпосилання, щоб зібрати фрагмент рядка, що містить слово з гіперпосиланням
 * (`line.substr(beginning_of_the_word[i], endings[i] - beginning_of_the_word[i])`).
 * Якщо фрагмент `final_line` не порожній, він виводиться на екран.
 *
 * В кінці функція звільняє пам'ять, видаляючи динамічно виділені масиви `beginnings`, `endings`
 * та `beginning_of_the_word`, щоб уникнути витоку пам'яті.
 *
 * @param inputFile Посилання на об'єкт ifstream для читання файлу.
 */

void file_opener(const std::string& textfile);
/**
 * @brief Відкриває файл і запускає процес пошуку гіперпосилань.
 *
 * Використовує ifstream для відкриття файлу.
 *
 * @param textfile Ім'я або шлях до текстового файлу для обробки.
 */

#endif // HYPERLINKFINDER_H
