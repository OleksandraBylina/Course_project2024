#ifndef DATEFINDER_H
#define DATEFINDER_H

#include <iostream>
#include <fstream>
#include <string>
#include <cctype>
#include <vector>

/**
 * @brief Масив із назвами місяців англійською.
 */
extern const std::string months[];

/**
 * @brief Перевіряє, чи всі символи у рядку є цифрами.
 *
 * Перебирає символи в рядку `str`, використовуючи `std::isdigit`, і перевіряє,
 * чи є кожен символ числом.
 *
 * @param str Рядок для перевірки.
 * @return Повертає true, якщо всі символи є цифрами, і false в іншому випадку.
 */
bool is_digits(const std::string& str);

/**
 * @brief Перевіряє, чи є рядок `part` роком.
 *
 * Використовує `is_digits` для перевірки, чи всі символи є цифрами, а також перевіряє,
 * чи довжина рядка відповідає 2 або 4 для року.
 *
 * @param part Рядок для перевірки.
 * @return Повертає true, якщо рядок є роком, і false в іншому випадку.
 */
bool is_year(const std::string& part);

/**
 * @brief Перевіряє, чи є рядок місяцем або днем.
 *
 * Використовує вбудовану функцію `is_digits` для перевірки, чи всі символи є цифрами, і перевіряє,
 * чи довжина рядка дорівнює 2 для місяця або дня.
 *
 * @param part Рядок для перевірки.
 * @return Повертає true, якщо рядок є місяцем або днем, і false в іншому випадку.
 */
bool is_month_or_day(const std::string& part);

/**
 * @brief Перетворює номер місяця на його назву англійською.
 *
 * Використовує масив `months`, де зберігаються назви місяців англійською,
 * для перетворення числового значення місяця на відповідну назву.
 * Якщо номер місяця знаходиться в діапазоні від 1 до 12, повертає назву місяця,
 * інакше повертає порожній рядок.
 *
 * @param month Рядок, що містить номер місяця.
 * @return Назва місяця англійською або порожній рядок, якщо номер неправильний.
 */
std::string month_to_name(const std::string& month);

/**
 * @brief Знаходить дати у рядку та перетворює їх у формат "DD Month YYYY".
 *
 * Перевіряє рядок на наявність дат у підтримуваних форматах:
 * - YYYY/MM/DD
 * - DD/MM/YYYY
 * - DD/MM/YY
 * Замінює знайдені дати на формат із назвою місяця.
 *
 * @param line Рядок, у якому виконується пошук і заміна дат.
 * @param count Змінна, яка зберігає кількість знайдених дат.
 * @return Рядок із заміненими датами у форматі "DD Month YYYY".
 */
std::string date_finder(const std::string& line, int& count);

/**
 * @brief Читає рядки з файлу, замінює дати та виводить їх.
 *
 * Зчитує файл рядок за рядком. Викликає `date_finder` для кожного рядка,
 * щоб знайти та замінити дати у підтримуваних форматах. Виводить оброблений рядок на екран.
 *
 * @param inputFile Посилання на об'єкт ifstream для читання файлу.
 */
void printer(std::ifstream& inputFile);

/**
 * @brief Відкриває файл і викликає функцію `printer` для обробки дат.
 *
 * Відкриває вказаний текстовий файл, перевіряє успішність відкриття,
 * і передає файл у функцію `printer` для обробки. У разі невдачі виводить повідомлення про помилку.
 *
 * @param textfile Ім'я текстового файлу для обробки.
 */
void file_opener(const std::string& textfile);

#endif // DATEFINDER_H
