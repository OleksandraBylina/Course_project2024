#ifndef DATEFINDER_H
#define DATEFINDER_H

#include <iostream>
#include <fstream>
#include <string>
#include <cctype>

// Масив із назвами місяців англійською
extern std::string months[];

// Оголошення функцій

bool is_digits(const std::string& str);
/**
 * @brief Перевіряє, чи всі символи в рядку є цифрами.
 *
 * Перебирає символи в рядку `str`, використовуючи `std::isdigit`, і перевіряє, чи є кожен символ числом.
 *
 * @param str Рядок для перевірки.
 * @return Повертає true, якщо всі символи є цифрами, і false інакше.
 */

bool is_year(const std::string& part);
/**
 * @brief Перевіряє, чи є рядок `part` роком.
 *
 * Використовує `is_digits` для перевірки, чи всі символи є цифрами, а також перевіряє,
 * чи довжина рядка відповідає 2 або 4 для року.
 *
 * @param part Рядок для перевірки.
 * @return Повертає true, якщо рядок є роком, і false інакше.
 */

bool is_month_or_day(const std::string& part);
/**
 * @brief Перевіряє, чи є рядок місяцем або днем.
 *
 * Використовує вбудовану функцію `is_digits` для перевірки, чи всі символи є цифрами, і перевіряє,
 * чи довжина рядка дорівнює 2 для місяця або року.
 *
 * @param part Рядок для перевірки.
 * @return Повертає true, якщо рядок є місяцем або днем, і false інакше.
 */

std::string month_to_name(const std::string& month);
/**
 * @brief Перетворює номер місяця на його назву англійською.
 *
 * Використовує масив `months`, де зберігаються назви місяців англійською,
 * для перетворення числового значення місяця на відповідну назву.
 * Якщо номер місяця знаходиться в діапазоні від 1 до 12, повертає назву місяця,
 * інакше повертає порожній рядок.
 *
 * @param month Рядок, що містить номер місяця.
 * @return Назва місяця англійською або порожній рядок, якщо номер неправильний.
 */

std::string date_finder(const std::string& line, int& count);
/**
 * @brief Знаходить дати у рядку та перетворює їх у формат "YYYY Month DD".
 *
 * Створює динамічні масиви для збереження дат, їхніх позицій і довжин. Перебирає рядок,
 * шукаючи послідовності, що можуть відповідати датам у форматах "YYYY/MM/DD" або "DD/MM/YYYY".
 * Якщо виявлено відповідність, замінює її на формат "YYYY Month DD" або "DD Month YYYY" залежно від структури.
 *
 * @param line Рядок, у якому виконується пошук і заміна дат.
 * @param count Змінна, що зберігає кількість знайдених дат.
 * @return Рядок із заміненими датами у форматі "YYYY Month DD" або "DD Month YYYY".
 */

void printer(std::ifstream& inputFile);
/**
 * @brief Читає рядки з файлу, замінює дати та виводить їх.
 *
 * Ініціалізує змінну `line` для запису кожного рядка з файлу. Викликає `date_finder`
 * для кожного рядка, щоб знайти та замінити дати у форматі "YYYY Month DD" або "DD Month YYYY".
 * Виводить оброблений рядок на екран.
 *
 * @param inputFile Посилання на об'єкт ifstream для читання файлу.
 */

void file_opener(const std::string& textfile);
/**
 * @brief Відкриває файл і викликає функцію `printer` для обробки дат.
 *
 * Відкриває вказаний текстовий файл, перевіряє на успішність відкриття,
 * і передає файл у функцію `printer` для подальшої обробки. Якщо файл не відкривається,
 * виводить повідомлення про помилку.
 *
 * @param textfile Ім'я текстового файлу для обробки.
 */

#endif // DATEFINDER_H
